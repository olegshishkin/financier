# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Common

on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:
    tags:
      - v*
    branches:
      - main

env:
  GO_VERSION: 1.19
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_EXPOSED_PORTS: 8080

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -v ./...

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: -c ./scripts/.golangci.yaml

  image-github:
    env:
      REGISTRY: ghcr.io
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker Metadata action
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./build/package/Dockerfile
          build-args: |
            PORTS=${{ env.IMAGE_EXPOSED_PORTS }}

  image-yc:
    env:
      REGISTRY: cr.yandex
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: YC Registry Login
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Build and push Docker image
        run: |
          docker buildx build \
          --tag ${{ env.REGISTRY }}/${{ vars.CR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          --build-arg PORTS=${{ env.IMAGE_EXPOSED_PORTS }} \
          --file ./build/package/Dockerfile \
          --push .
